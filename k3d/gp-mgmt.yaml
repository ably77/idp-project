apiVersion: k3d.io/v1alpha3
kind: Simple
name: gp-mgmt
image: rancher/k3s:v1.23.5-k3s1
kubeAPI: # same as `--api-port myhost.my.domain:6445` (where the name would resolve to 127.0.0.1)
  #host: "gp-mgmt.glooplatform.com" # important for the `server` setting in the kubeconfig
  hostIP: "127.0.0.1" # where the Kubernetes API will be listening on
  hostPort: "6443" # where the Kubernetes API listening port will be mapped to on your host system
network: k3d-cluster-network
ports:
  - port: 8090:8090 # same as `--port '8090:8090@loadbalancer'`
    nodeFilters:
      - loadbalancer
  - port: 80:80 # same as `--port '80:80@loadbalancer'`
    nodeFilters:
      - loadbalancer
  - port: 443:443 # same as `--port '443:443@loadbalancer'`
    nodeFilters:
      - loadbalancer      
options:
  k3d: # k3d runtime settings
    wait: true # wait for cluster to be usable before returining; same as `--wait` (default: true)
    timeout: "60s" # wait timeout before aborting; same as `--timeout 60s`
    disableLoadbalancer: false # same as `--no-lb`
  k3s: # options passed on to K3s itself
    extraArgs: # additional arguments passed to the `k3s server` command; same as `--k3s-server-arg`
      - arg: --disable=traefik
        nodeFilters:
          - server:*
    nodeLabels:
      - label: topology.kubernetes.io/region=us-west
        nodeFilters:
          - server:*
      - label: topology.kubernetes.io/zone=us-west-1a
        nodeFilters:
          - server:*
  kubeconfig:
    updateDefaultKubeconfig: true # add new cluster to your default Kubeconfig; same as `--kubeconfig-update-default` (default: true)
    switchCurrentContext: true # also set current-context to the new cluster's context; same as `--kubeconfig-switch-context` (default: true)